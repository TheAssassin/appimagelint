name: Build and deploy AppImage

on: [push, pull_request]

env:
  TERM: xterm-256color

jobs:
  appimage:
    strategy:
      matrix:
        ARCH: [x86_64, i386]

    name: Build AppImage for ${{ matrix.ARCH }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies (x86_64)
        if: matrix.ARCH == 'x86_64'
        run: |
          sudo apt-get install -y desktop-file-utils
      - name: Install dependencies (i386)
        if: matrix.ARCH == 'i386'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y desktop-file-utils \
              libc6:i386 libstdc++6:i386 libffi7:i386 libgmp10:i386 zlib1g:i386 libfuse2:i386
      - name: Build AppImage
        run: |
          export ARCH="${{ matrix.ARCH }}"
          bash -xe ci/build-appimage.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AppImage ${{ matrix.ARCH }}
          path: appimagelint*.AppImage*

  upload:
    name: Create release and upload artifacts
    runs-on: ubuntu-latest
    needs:
      - appimage
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage appimagelint*.AppImage*
